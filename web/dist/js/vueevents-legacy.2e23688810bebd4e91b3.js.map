{"version":3,"sources":["webpack:///./node_modules/vue-events/dist/index.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","plugin","Vue","installed","events","methods","emit","event","_len","arguments","length","args","Array","_key","this","$emit","apply","concat","fire","_len2","_key2","on","callback","$on","listen","once","$once","off","$off","remove","get","mixin","beforeCreate","$options","eventMap","key","bind","window","use","default"],"mappings":";;;;;;;;;0FAEAA,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAGA,IAAAC,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAE5I,SAAAG,EAAAC,GAGA,IAAAD,EAAAE,UAAA,CAGA,IAAAC,EAAA,IAAAF,EAAA,CACAG,QAAA,CAOAC,KAAA,SAAAC,GACA,QAAAC,EAAAC,UAAAC,OAAAC,EAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAA0FA,EAAAL,EAAaK,IACvGF,EAAAE,EAAA,GAAAJ,UAAAI,GAGAC,KAAAC,MAAAC,MAAAF,KAAA,CAAAP,GAAAU,OAAAN,KAUAO,KAAA,SAAAX,GACA,QAAAY,EAAAV,UAAAC,OAAAC,EAAAC,MAAAO,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAA8FA,EAAAD,EAAeC,IAC7GT,EAAAS,EAAA,GAAAX,UAAAW,GAGAN,KAAAR,KAAAU,MAAAF,KAAA,CAAAP,GAAAU,OAAAN,KAUAU,GAAA,SAAAd,EAAAe,GACAR,KAAAS,IAAAhB,EAAAe,IAUAE,OAAA,SAAAjB,EAAAe,GACAR,KAAAO,GAAAd,EAAAe,IAUAG,KAAA,SAAAlB,EAAAe,GACAR,KAAAY,MAAAnB,EAAAe,IAUAK,IAAA,SAAApB,EAAAe,GACAR,KAAAc,KAAArB,EAAAe,IAUAO,OAAA,SAAAtB,EAAAe,GACAR,KAAAa,IAAApB,EAAAe,OAMA/B,OAAAC,eAAAU,EAAAF,UAAA,WACA8B,IAAA,WACA,OAAA1B,KAKAF,EAAA6B,MAAA,CAEAC,aAAA,WAEA,cAAArC,EAAAmB,KAAAmB,SAAA7B,QAAA,CAEA,IAAA8B,EAAA,GAEA,QAAAC,KAAArB,KAAAmB,SAAA7B,OAEA8B,EAAAC,GAAArB,KAAAmB,SAAA7B,OAAA+B,GAAAC,KAAAtB,MAGAA,KAAAY,MAAA,8BAEA,QAAAS,KAAAD,EAEA9B,EAAAmB,IAAAY,EAAAD,EAAAC,MAIArB,KAAAY,MAAA,gCAEA,QAAAS,KAAAD,EAEA9B,EAAAwB,KAAAO,EAAAD,EAAAC,IAGAD,EAAA,YAOA,oBAAAG,eAAAnC,KAEAmC,OAAAnC,IAAAoC,IAAArC,GAGAR,EAAA8C,QAAAtC","file":"js/vueevents-legacy.2e23688810bebd4e91b3.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction plugin(Vue) {\n\n  // Exit if the plugin has already been installed.\n  if (plugin.installed) return;\n\n  // Create a `vm` to serve as our global event bus.\n  var events = new Vue({\n    methods: {\n      /**\n       * Emit the given event.\n       *\n       * @param {string|object} event\n       * @param {...*} args\n       */\n      emit: function emit(event) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        this.$emit.apply(this, [event].concat(args));\n      },\n\n\n      /**\n       * Emit the given event.\n       *\n       * @param {string|object} event\n       * @param {...*} args\n       */\n      fire: function fire(event) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        this.emit.apply(this, [event].concat(args));\n      },\n\n\n      /**\n       * Listen for the given event.\n       *\n       * @param {string} event\n       * @param {function} callback\n       */\n      on: function on(event, callback) {\n        this.$on(event, callback);\n      },\n\n\n      /**\n       * Listen for the given event.\n       *\n       * @param {string} event\n       * @param {function} callback\n       */\n      listen: function listen(event, callback) {\n        this.on(event, callback);\n      },\n\n\n      /**\n       * Listen for the given event once.\n       *\n       * @param {string} event\n       * @param {function} callback\n       */\n      once: function once(event, callback) {\n        this.$once(event, callback);\n      },\n\n\n      /**\n       * Remove one or more event listeners.\n       *\n       * @param {string} event\n       * @param {function} callback\n       */\n      off: function off(event, callback) {\n        this.$off(event, callback);\n      },\n\n\n      /**\n       * Remove one or more event listeners.\n       *\n       * @param {string} event\n       * @param {function} callback\n       */\n      remove: function remove(event, callback) {\n        this.off(event, callback);\n      }\n    }\n  });\n\n  // Extend `Vue.prototype` to include our global event bus.\n  Object.defineProperty(Vue.prototype, '$events', {\n    get: function get() {\n      return events;\n    }\n  });\n\n  // Register a mixin that adds an `events` option to Vue 2.0 components.\n  Vue.mixin({\n    // Hook into the Vue 2.0 `beforeCreate` life-cycle event.\n    beforeCreate: function beforeCreate() {\n      // Exit if there's no `events` option.\n      if (_typeof(this.$options.events) !== 'object') return;\n      // Cache of events to bound functions for automatic unsubscriptions\n      var eventMap = {};\n      // Loop through each event.\n      for (var key in this.$options.events) {\n        // Assign event type and bound function to map\n        eventMap[key] = this.$options.events[key].bind(this);\n      }\n      // Listen for the `hook:beforeMount` Vue 2.0 life-cycle event.\n      this.$once('hook:beforeMount', function () {\n        // Loop through each event.\n        for (var key in eventMap) {\n          // Register a listener for the event.\n          events.$on(key, eventMap[key]);\n        }\n      });\n      // Listen for the `hook:beforeDestroy` Vue 2.0 life-cycle event.\n      this.$once('hook:beforeDestroy', function () {\n        // Loop through each event.\n        for (var key in eventMap) {\n          // Register a listener for the event.\n          events.$off(key, eventMap[key]);\n        }\n        // Release cache\n        eventMap = null;\n      });\n    }\n  });\n}\n\n// Check for `window.Vue`\nif (typeof window !== 'undefined' && window.Vue) {\n  // Install plugin automatically.\n  window.Vue.use(plugin);\n}\n\nexports.default = plugin;"],"sourceRoot":""}