{"version":3,"sources":["webpack:///./src/vue/Vuetable.vue?02f9","webpack:///./src/vue/Vuetable.vue?8757","webpack:///./src/vue/Vuetable.vue?8d9c","webpack:///src/vue/Vuetable.vue","webpack:///./src/vue/Vuetable.vue"],"names":["_node_modules_ignore_loader_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_Vuetable_vue_vue_type_style_index_0_id_ec786f2c_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","render","_vm","this","_h","$createElement","_c","_self","isFixedHeader","staticClass","class","css","tableClass","tableHeaderClass","_l","tableFields","field","fieldIndex","visible","isSpecialField","name","extractName","key","trackBy","titleClass","style","width","attrs","type","domProps","checked","checkCheckboxesState","on","change","$event","toggleAllCheckboxes","_e","_v","sortClass","sortable","isSortable","innerHTML","_s","renderTitle","click","orderBy","extractArgs","notIn","id","scrollVisible","scrollBarWidth","height","tableHeight","tableBodyClass","tableData","item","itemIndex","onRowClass","item-index","onRowChanged","onRowClicked","dblclick","onRowDoubleClicked","dataClass","renderSequence","renderIconTag","handleIcon","rowSelected","toggleCheckbox","tag","row-data","row-index","row-field","sortField","_t","rowData","rowIndex","rowField","renderNormalField","onCellClicked","onCellDoubleClicked","contextmenu","onCellRightClicked","useDetailRow","detailRowTransition","isVisibleDetailRow","detailRowClass","onDetailRowClick","colspan","countVisibleFields","detailRowComponent","displayEmptyDataRow","noDataTemplate","lessThanMinRows","blankRows","i","hasCallback","callCallback","getObjectValue","_withStripped","vue_Vuetablevue_type_script_lang_js_","props","fields","Array","required","loadOnStart","Boolean","default","apiUrl","String","httpMethod","validator","value","indexOf","reactiveApiUrl","apiMode","data","Object","dataTotal","Number","dataManager","Function","dataPath","paginationPath","queryParams","sort","page","perPage","appendParams","httpOptions","httpFetch","initialPage","sortOrder","multiSort","multiSortKey","rowClassCallback","rowClass","loadingClass","ascendingIcon","descendingIcon","ascendingClass","descendingClass","sortableIcon","minRows","silent","showSortIcons","[object Object]","eventPrefix","tablePagination","currentPage","selectedTo","visibleDetailRows","lastScrollPosition","normalizeFields","normalizeSortOrder","getScrollBarWidth","$nextTick","fireEvent","loadData","elem","$el","getElementsByClassName","addEventListener","handleScroll","removeEventListener","computed","version","VERSION","warn","filter","length","countTableData","methods","outer","document","createElement","inner","visibility","appendChild","body","widthWithoutScrollbar","offsetWidth","overflow","widthWithScrollbar","removeChild","e","horizontal","currentTarget","scrollLeft","header","obj","self","forEach","title","setTitle","callback","undefined","push","isArray","fixHeader","str","titleCase","getTitle","replace","isInCurrentSortGroup","hasSortableIcon","concat","sortIconOpacity","sortIcon","index","from","fieldName","slice","txt","charAt","toUpperCase","substr","toLowerCase","delimiter","arguments","split","map","join","arr","success","loadSuccess","failed","loadFailed","isDataMode","getAppendParams","getAllQueryParams","fetch","then","catch","callDataManager","axios_default","a","response","transform","scrollHeight","clientHeight","console","error","parentFunctionExists","$parent","call","func","args","defaultValue","eventName","$emit","msg","params","getSortParam","getDefaultSortParam","result","direction","x","string","trim","currentSortOrderPosition","fieldIsInSortOrderPosition","event","multiColumnSort","singleColumnSort","splice","clearSortOrder","cls","step","count","shift","apply","object","path","dataItem","isChecked","target","idColumn","selectId","unselectId","isSelectedRow","selector","els","querySelectorAll","cb","selected","el","indeterminate","last_page","rowId","hideDetailRow","showDetailRow","classes","options","renderIcon","total","per_page","current_page","Math","ceil","next_page_url","prev_page_url","to","min","setData","makePagination","gotoPreviousPage","gotoNextPage","gotoPage","watch","newVal","oldVal","refresh","component","componentNormalizer","__file","__webpack_exports__"],"mappings":"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","file":"js/vuetable.6a6fd600089d18a6f1b7.js","sourcesContent":["import mod from \"-!../../node_modules/ignore-loader/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vuetable.vue?vue&type=style&index=0&id=ec786f2c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/ignore-loader/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vuetable.vue?vue&type=style&index=0&id=ec786f2c&scoped=true&lang=css&\"","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.isFixedHeader\n    ? _c(\"div\", [\n        _c(\"div\", { staticClass: \"vuetable-head-wrapper\" }, [\n          _c(\n            \"table\",\n            {\n              class: [\"vuetable\", _vm.css.tableClass, _vm.css.tableHeaderClass]\n            },\n            [\n              _c(\"thead\", [\n                _c(\n                  \"tr\",\n                  [\n                    _vm._l(_vm.tableFields, function(field, fieldIndex) {\n                      return [\n                        field.visible\n                          ? [\n                              _vm.isSpecialField(field.name)\n                                ? [\n                                    _vm.extractName(field.name) == \"__checkbox\"\n                                      ? _c(\n                                          \"th\",\n                                          {\n                                            key: fieldIndex,\n                                            class: [\n                                              \"vuetable-th-checkbox-\" +\n                                                _vm.trackBy,\n                                              field.titleClass\n                                            ],\n                                            style: { width: field.width }\n                                          },\n                                          [\n                                            _c(\"input\", {\n                                              attrs: { type: \"checkbox\" },\n                                              domProps: {\n                                                checked: _vm.checkCheckboxesState(\n                                                  field.name\n                                                )\n                                              },\n                                              on: {\n                                                change: function($event) {\n                                                  return _vm.toggleAllCheckboxes(\n                                                    field.name,\n                                                    $event\n                                                  )\n                                                }\n                                              }\n                                            })\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.extractName(field.name) == \"__component\"\n                                      ? _c(\"th\", {\n                                          key: fieldIndex,\n                                          class: [\n                                            \"vuetable-th-component-\" +\n                                              _vm.trackBy,\n                                            field.titleClass,\n                                            _vm.sortClass(field),\n                                            { sortable: _vm.isSortable(field) }\n                                          ],\n                                          style: { width: field.width },\n                                          domProps: {\n                                            innerHTML: _vm._s(\n                                              _vm.renderTitle(field)\n                                            )\n                                          },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.orderBy(field, $event)\n                                            }\n                                          }\n                                        })\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.extractName(field.name) == \"__slot\"\n                                      ? _c(\"th\", {\n                                          key: fieldIndex,\n                                          class: [\n                                            \"vuetable-th-slot-\" +\n                                              _vm.extractArgs(field.name),\n                                            field.titleClass,\n                                            _vm.sortClass(field),\n                                            { sortable: _vm.isSortable(field) }\n                                          ],\n                                          style: { width: field.width },\n                                          domProps: {\n                                            innerHTML: _vm._s(\n                                              _vm.renderTitle(field)\n                                            )\n                                          },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.orderBy(field, $event)\n                                            }\n                                          }\n                                        })\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.extractName(field.name) == \"__sequence\"\n                                      ? _c(\"th\", {\n                                          key: fieldIndex,\n                                          class: [\n                                            \"vuetable-th-sequence\",\n                                            field.titleClass || \"\"\n                                          ],\n                                          style: { width: field.width },\n                                          domProps: {\n                                            innerHTML: _vm._s(\n                                              _vm.renderTitle(field)\n                                            )\n                                          }\n                                        })\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.notIn(_vm.extractName(field.name), [\n                                      \"__sequence\",\n                                      \"__checkbox\",\n                                      \"__component\",\n                                      \"__slot\"\n                                    ])\n                                      ? _c(\"th\", {\n                                          key: fieldIndex,\n                                          class: [\n                                            \"vuetable-th-\" + field.name,\n                                            field.titleClass || \"\"\n                                          ],\n                                          style: { width: field.width },\n                                          domProps: {\n                                            innerHTML: _vm._s(\n                                              _vm.renderTitle(field)\n                                            )\n                                          }\n                                        })\n                                      : _vm._e()\n                                  ]\n                                : [\n                                    _c(\"th\", {\n                                      key: fieldIndex,\n                                      class: [\n                                        \"vuetable-th-\" + field.name,\n                                        field.titleClass,\n                                        _vm.sortClass(field),\n                                        { sortable: _vm.isSortable(field) }\n                                      ],\n                                      style: { width: field.width },\n                                      attrs: { id: \"_\" + field.name },\n                                      domProps: {\n                                        innerHTML: _vm._s(\n                                          _vm.renderTitle(field)\n                                        )\n                                      },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.orderBy(field, $event)\n                                        }\n                                      }\n                                    })\n                                  ]\n                            ]\n                          : _vm._e()\n                      ]\n                    }),\n                    _vm._v(\" \"),\n                    _vm.scrollVisible\n                      ? _c(\"th\", {\n                          staticClass: \"vuetable-gutter-col\",\n                          style: { width: _vm.scrollBarWidth }\n                        })\n                      : _vm._e()\n                  ],\n                  2\n                )\n              ])\n            ]\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            staticClass: \"vuetable-body-wrapper\",\n            style: { height: _vm.tableHeight }\n          },\n          [\n            _c(\n              \"table\",\n              {\n                class: [\"vuetable\", _vm.css.tableClass, _vm.css.tableBodyClass]\n              },\n              [\n                _c(\n                  \"colgroup\",\n                  [\n                    _vm._l(_vm.tableFields, function(field, fieldIndex) {\n                      return [\n                        field.visible\n                          ? [\n                              _c(\"col\", {\n                                key: fieldIndex,\n                                class: [\n                                  \"vuetable-th-\" + field.name,\n                                  field.titleClass\n                                ],\n                                style: { width: field.width },\n                                attrs: { id: \"_col_\" + field.name }\n                              })\n                            ]\n                          : _vm._e()\n                      ]\n                    })\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"tbody\",\n                  { staticClass: \"vuetable-body\" },\n                  [\n                    _vm._l(_vm.tableData, function(item, itemIndex) {\n                      return [\n                        _c(\n                          \"tr\",\n                          {\n                            key: itemIndex,\n                            class: _vm.onRowClass(item, itemIndex),\n                            attrs: {\n                              \"item-index\": itemIndex,\n                              render: _vm.onRowChanged(item)\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.onRowClicked(item, $event)\n                              },\n                              dblclick: function($event) {\n                                return _vm.onRowDoubleClicked(item, $event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._l(_vm.tableFields, function(\n                              field,\n                              fieldIndex\n                            ) {\n                              return [\n                                field.visible\n                                  ? [\n                                      _vm.isSpecialField(field.name)\n                                        ? [\n                                            _vm.extractName(field.name) ==\n                                            \"__sequence\"\n                                              ? _c(\"td\", {\n                                                  key: fieldIndex,\n                                                  class: [\n                                                    \"vuetable-sequence\",\n                                                    field.dataClass\n                                                  ],\n                                                  domProps: {\n                                                    innerHTML: _vm._s(\n                                                      _vm.renderSequence(\n                                                        itemIndex\n                                                      )\n                                                    )\n                                                  }\n                                                })\n                                              : _vm._e(),\n                                            _vm._v(\" \"),\n                                            _vm.extractName(field.name) ==\n                                            \"__handle\"\n                                              ? _c(\"td\", {\n                                                  key: fieldIndex,\n                                                  class: [\n                                                    \"vuetable-handle\",\n                                                    field.dataClass\n                                                  ],\n                                                  domProps: {\n                                                    innerHTML: _vm._s(\n                                                      _vm.renderIconTag([\n                                                        \"handle-icon\",\n                                                        _vm.css.handleIcon\n                                                      ])\n                                                    )\n                                                  }\n                                                })\n                                              : _vm._e(),\n                                            _vm._v(\" \"),\n                                            _vm.extractName(field.name) ==\n                                            \"__checkbox\"\n                                              ? _c(\n                                                  \"td\",\n                                                  {\n                                                    key: fieldIndex,\n                                                    class: [\n                                                      \"vuetable-checkboxes\",\n                                                      field.dataClass\n                                                    ]\n                                                  },\n                                                  [\n                                                    _c(\"input\", {\n                                                      attrs: {\n                                                        type: \"checkbox\"\n                                                      },\n                                                      domProps: {\n                                                        checked: _vm.rowSelected(\n                                                          item,\n                                                          field.name\n                                                        )\n                                                      },\n                                                      on: {\n                                                        change: function(\n                                                          $event\n                                                        ) {\n                                                          return _vm.toggleCheckbox(\n                                                            item,\n                                                            field.name,\n                                                            $event\n                                                          )\n                                                        }\n                                                      }\n                                                    })\n                                                  ]\n                                                )\n                                              : _vm._e(),\n                                            _vm._v(\" \"),\n                                            _vm.extractName(field.name) ===\n                                            \"__component\"\n                                              ? _c(\n                                                  \"td\",\n                                                  {\n                                                    key: fieldIndex,\n                                                    class: [\n                                                      \"vuetable-component\",\n                                                      field.dataClass\n                                                    ]\n                                                  },\n                                                  [\n                                                    _c(\n                                                      _vm.extractArgs(\n                                                        field.name\n                                                      ),\n                                                      {\n                                                        tag: \"component\",\n                                                        attrs: {\n                                                          \"row-data\": item,\n                                                          \"row-index\": itemIndex,\n                                                          \"row-field\":\n                                                            field.sortField\n                                                        }\n                                                      }\n                                                    )\n                                                  ],\n                                                  1\n                                                )\n                                              : _vm._e(),\n                                            _vm._v(\" \"),\n                                            _vm.extractName(field.name) ===\n                                            \"__slot\"\n                                              ? _c(\n                                                  \"td\",\n                                                  {\n                                                    key: fieldIndex,\n                                                    class: [\n                                                      \"vuetable-slot\",\n                                                      field.dataClass\n                                                    ]\n                                                  },\n                                                  [\n                                                    _vm._t(\n                                                      _vm.extractArgs(\n                                                        field.name\n                                                      ),\n                                                      null,\n                                                      {\n                                                        rowData: item,\n                                                        rowIndex: itemIndex,\n                                                        rowField:\n                                                          field.sortField\n                                                      }\n                                                    )\n                                                  ],\n                                                  2\n                                                )\n                                              : _vm._e()\n                                          ]\n                                        : [\n                                            _c(\"td\", {\n                                              key: fieldIndex,\n                                              class: field.dataClass,\n                                              domProps: {\n                                                innerHTML: _vm._s(\n                                                  _vm.renderNormalField(\n                                                    field,\n                                                    item\n                                                  )\n                                                )\n                                              },\n                                              on: {\n                                                click: function($event) {\n                                                  return _vm.onCellClicked(\n                                                    item,\n                                                    field,\n                                                    $event\n                                                  )\n                                                },\n                                                dblclick: function($event) {\n                                                  return _vm.onCellDoubleClicked(\n                                                    item,\n                                                    field,\n                                                    $event\n                                                  )\n                                                },\n                                                contextmenu: function($event) {\n                                                  return _vm.onCellRightClicked(\n                                                    item,\n                                                    field,\n                                                    $event\n                                                  )\n                                                }\n                                              }\n                                            })\n                                          ]\n                                    ]\n                                  : _vm._e()\n                              ]\n                            })\n                          ],\n                          2\n                        ),\n                        _vm._v(\" \"),\n                        _vm.useDetailRow\n                          ? [\n                              _c(\n                                \"transition\",\n                                {\n                                  key: itemIndex,\n                                  attrs: { name: _vm.detailRowTransition }\n                                },\n                                [\n                                  _vm.isVisibleDetailRow(item[_vm.trackBy])\n                                    ? _c(\n                                        \"tr\",\n                                        {\n                                          class: [_vm.css.detailRowClass],\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.onDetailRowClick(\n                                                item,\n                                                $event\n                                              )\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"td\",\n                                            {\n                                              attrs: {\n                                                colspan: _vm.countVisibleFields\n                                              }\n                                            },\n                                            [\n                                              _c(_vm.detailRowComponent, {\n                                                tag: \"component\",\n                                                attrs: {\n                                                  \"row-data\": item,\n                                                  \"row-index\": itemIndex\n                                                }\n                                              })\n                                            ],\n                                            1\n                                          )\n                                        ]\n                                      )\n                                    : _vm._e()\n                                ]\n                              )\n                            ]\n                          : _vm._e()\n                      ]\n                    }),\n                    _vm._v(\" \"),\n                    _vm.displayEmptyDataRow\n                      ? [\n                          _c(\"tr\", [\n                            _c(\"td\", {\n                              staticClass: \"vuetable-empty-result\",\n                              attrs: { colspan: _vm.countVisibleFields },\n                              domProps: {\n                                innerHTML: _vm._s(_vm.noDataTemplate)\n                              }\n                            })\n                          ])\n                        ]\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.lessThanMinRows\n                      ? _vm._l(_vm.blankRows, function(i) {\n                          return _c(\n                            \"tr\",\n                            { key: i, staticClass: \"blank-row\" },\n                            [\n                              _vm._l(_vm.tableFields, function(\n                                field,\n                                fieldIndex\n                              ) {\n                                return [\n                                  field.visible\n                                    ? _c(\"td\", { key: fieldIndex }, [\n                                        _vm._v(\" \")\n                                      ])\n                                    : _vm._e()\n                                ]\n                              })\n                            ],\n                            2\n                          )\n                        })\n                      : _vm._e()\n                  ],\n                  2\n                )\n              ]\n            )\n          ]\n        )\n      ])\n    : _c(\"table\", { class: [\"vuetable\", _vm.css.tableClass] }, [\n        _c(\"thead\", [\n          _c(\n            \"tr\",\n            [\n              _vm._l(_vm.tableFields, function(field, fieldIndex) {\n                return [\n                  field.visible\n                    ? [\n                        _vm.isSpecialField(field.name)\n                          ? [\n                              _vm.extractName(field.name) == \"__checkbox\"\n                                ? _c(\n                                    \"th\",\n                                    {\n                                      key: fieldIndex,\n                                      class: [\n                                        \"vuetable-th-checkbox-\" + _vm.trackBy,\n                                        field.titleClass\n                                      ],\n                                      style: { width: field.width }\n                                    },\n                                    [\n                                      _c(\"input\", {\n                                        attrs: { type: \"checkbox\" },\n                                        domProps: {\n                                          checked: _vm.checkCheckboxesState(\n                                            field.name\n                                          )\n                                        },\n                                        on: {\n                                          change: function($event) {\n                                            return _vm.toggleAllCheckboxes(\n                                              field.name,\n                                              $event\n                                            )\n                                          }\n                                        }\n                                      })\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.extractName(field.name) == \"__component\"\n                                ? _c(\"th\", {\n                                    key: fieldIndex,\n                                    class: [\n                                      \"vuetable-th-component-\" + _vm.trackBy,\n                                      field.titleClass,\n                                      _vm.sortClass(field),\n                                      { sortable: _vm.isSortable(field) }\n                                    ],\n                                    style: { width: field.width },\n                                    domProps: {\n                                      innerHTML: _vm._s(_vm.renderTitle(field))\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.orderBy(field, $event)\n                                      }\n                                    }\n                                  })\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.extractName(field.name) == \"__slot\"\n                                ? _c(\"th\", {\n                                    key: fieldIndex,\n                                    class: [\n                                      \"vuetable-th-slot-\" +\n                                        _vm.extractArgs(field.name),\n                                      field.titleClass,\n                                      _vm.sortClass(field),\n                                      { sortable: _vm.isSortable(field) }\n                                    ],\n                                    style: { width: field.width },\n                                    domProps: {\n                                      innerHTML: _vm._s(_vm.renderTitle(field))\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.orderBy(field, $event)\n                                      }\n                                    }\n                                  })\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.extractName(field.name) == \"__sequence\"\n                                ? _c(\"th\", {\n                                    key: fieldIndex,\n                                    class: [\n                                      \"vuetable-th-sequence\",\n                                      field.titleClass || \"\",\n                                      _vm.sortClass(field)\n                                    ],\n                                    style: { width: field.width },\n                                    domProps: {\n                                      innerHTML: _vm._s(_vm.renderTitle(field))\n                                    }\n                                  })\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.notIn(_vm.extractName(field.name), [\n                                \"__sequence\",\n                                \"__checkbox\",\n                                \"__component\",\n                                \"__slot\"\n                              ])\n                                ? _c(\"th\", {\n                                    key: fieldIndex,\n                                    class: [\n                                      \"vuetable-th-\" + field.name,\n                                      field.titleClass || \"\",\n                                      _vm.sortClass(field)\n                                    ],\n                                    style: { width: field.width },\n                                    domProps: {\n                                      innerHTML: _vm._s(_vm.renderTitle(field))\n                                    }\n                                  })\n                                : _vm._e()\n                            ]\n                          : [\n                              _c(\"th\", {\n                                key: fieldIndex,\n                                class: [\n                                  \"vuetable-th-\" + field.name,\n                                  field.titleClass,\n                                  _vm.sortClass(field),\n                                  { sortable: _vm.isSortable(field) }\n                                ],\n                                style: { width: field.width },\n                                attrs: { id: \"_\" + field.name },\n                                domProps: {\n                                  innerHTML: _vm._s(_vm.renderTitle(field))\n                                },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.orderBy(field, $event)\n                                  }\n                                }\n                              })\n                            ]\n                      ]\n                    : _vm._e()\n                ]\n              })\n            ],\n            2\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"tbody\",\n          { staticClass: \"vuetable-body\" },\n          [\n            _vm._l(_vm.tableData, function(item, itemIndex) {\n              return [\n                _c(\n                  \"tr\",\n                  {\n                    key: itemIndex,\n                    class: _vm.onRowClass(item, itemIndex),\n                    attrs: {\n                      \"item-index\": itemIndex,\n                      render: _vm.onRowChanged(item)\n                    },\n                    on: {\n                      dblclick: function($event) {\n                        return _vm.onRowDoubleClicked(item, $event)\n                      },\n                      click: function($event) {\n                        return _vm.onRowClicked(item, $event)\n                      }\n                    }\n                  },\n                  [\n                    _vm._l(_vm.tableFields, function(field, fieldIndex) {\n                      return [\n                        field.visible\n                          ? [\n                              _vm.isSpecialField(field.name)\n                                ? [\n                                    _vm.extractName(field.name) == \"__sequence\"\n                                      ? _c(\"td\", {\n                                          key: fieldIndex,\n                                          class: [\n                                            \"vuetable-sequence\",\n                                            field.dataClass\n                                          ],\n                                          domProps: {\n                                            innerHTML: _vm._s(\n                                              _vm.renderSequence(itemIndex)\n                                            )\n                                          }\n                                        })\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.extractName(field.name) == \"__handle\"\n                                      ? _c(\"td\", {\n                                          key: fieldIndex,\n                                          class: [\n                                            \"vuetable-handle\",\n                                            field.dataClass\n                                          ],\n                                          domProps: {\n                                            innerHTML: _vm._s(\n                                              _vm.renderIconTag([\n                                                \"handle-icon\",\n                                                _vm.css.handleIcon\n                                              ])\n                                            )\n                                          }\n                                        })\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.extractName(field.name) == \"__checkbox\"\n                                      ? _c(\n                                          \"td\",\n                                          {\n                                            key: fieldIndex,\n                                            class: [\n                                              \"vuetable-checkboxes\",\n                                              field.dataClass\n                                            ]\n                                          },\n                                          [\n                                            _c(\"input\", {\n                                              attrs: { type: \"checkbox\" },\n                                              domProps: {\n                                                checked: _vm.rowSelected(\n                                                  item,\n                                                  field.name\n                                                )\n                                              },\n                                              on: {\n                                                change: function($event) {\n                                                  return _vm.toggleCheckbox(\n                                                    item,\n                                                    field.name,\n                                                    $event\n                                                  )\n                                                }\n                                              }\n                                            })\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.extractName(field.name) ===\n                                    \"__component\"\n                                      ? _c(\n                                          \"td\",\n                                          {\n                                            key: fieldIndex,\n                                            class: [\n                                              \"vuetable-component\",\n                                              field.dataClass\n                                            ]\n                                          },\n                                          [\n                                            _c(_vm.extractArgs(field.name), {\n                                              tag: \"component\",\n                                              attrs: {\n                                                \"row-data\": item,\n                                                \"row-index\": itemIndex,\n                                                \"row-field\": field.sortField\n                                              }\n                                            })\n                                          ],\n                                          1\n                                        )\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.extractName(field.name) === \"__slot\"\n                                      ? _c(\n                                          \"td\",\n                                          {\n                                            key: fieldIndex,\n                                            class: [\n                                              \"vuetable-slot\",\n                                              field.dataClass\n                                            ]\n                                          },\n                                          [\n                                            _vm._t(\n                                              _vm.extractArgs(field.name),\n                                              null,\n                                              {\n                                                rowData: item,\n                                                rowIndex: itemIndex,\n                                                rowField: field.sortField\n                                              }\n                                            )\n                                          ],\n                                          2\n                                        )\n                                      : _vm._e()\n                                  ]\n                                : [\n                                    _vm.hasCallback(field)\n                                      ? _c(\"td\", {\n                                          key: fieldIndex,\n                                          class: field.dataClass,\n                                          domProps: {\n                                            innerHTML: _vm._s(\n                                              _vm.callCallback(field, item)\n                                            )\n                                          },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.onCellClicked(\n                                                item,\n                                                field,\n                                                $event\n                                              )\n                                            },\n                                            dblclick: function($event) {\n                                              return _vm.onCellDoubleClicked(\n                                                item,\n                                                field,\n                                                $event\n                                              )\n                                            },\n                                            contextmenu: function($event) {\n                                              return _vm.onCellRightClicked(\n                                                item,\n                                                field,\n                                                $event\n                                              )\n                                            }\n                                          }\n                                        })\n                                      : _c(\"td\", {\n                                          key: fieldIndex,\n                                          class: field.dataClass,\n                                          domProps: {\n                                            innerHTML: _vm._s(\n                                              _vm.getObjectValue(\n                                                item,\n                                                field.name,\n                                                \"\"\n                                              )\n                                            )\n                                          },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.onCellClicked(\n                                                item,\n                                                field,\n                                                $event\n                                              )\n                                            },\n                                            dblclick: function($event) {\n                                              return _vm.onCellDoubleClicked(\n                                                item,\n                                                field,\n                                                $event\n                                              )\n                                            },\n                                            contextmenu: function($event) {\n                                              return _vm.onCellRightClicked(\n                                                item,\n                                                field,\n                                                $event\n                                              )\n                                            }\n                                          }\n                                        })\n                                  ]\n                            ]\n                          : _vm._e()\n                      ]\n                    })\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _vm.useDetailRow\n                  ? [\n                      _c(\n                        \"transition\",\n                        {\n                          key: itemIndex,\n                          attrs: { name: _vm.detailRowTransition }\n                        },\n                        [\n                          _vm.isVisibleDetailRow(item[_vm.trackBy])\n                            ? _c(\n                                \"tr\",\n                                {\n                                  class: [_vm.css.detailRowClass],\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.onDetailRowClick(item, $event)\n                                    }\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"td\",\n                                    {\n                                      attrs: { colspan: _vm.countVisibleFields }\n                                    },\n                                    [\n                                      _c(_vm.detailRowComponent, {\n                                        tag: \"component\",\n                                        attrs: {\n                                          \"row-data\": item,\n                                          \"row-index\": itemIndex\n                                        }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                ]\n                              )\n                            : _vm._e()\n                        ]\n                      )\n                    ]\n                  : _vm._e()\n              ]\n            }),\n            _vm._v(\" \"),\n            _vm.displayEmptyDataRow\n              ? [\n                  _c(\"tr\", [\n                    _c(\"td\", {\n                      staticClass: \"vuetable-empty-result\",\n                      attrs: { colspan: _vm.countVisibleFields },\n                      domProps: { innerHTML: _vm._s(_vm.noDataTemplate) }\n                    })\n                  ])\n                ]\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.lessThanMinRows\n              ? _vm._l(_vm.blankRows, function(i) {\n                  return _c(\n                    \"tr\",\n                    { key: i, staticClass: \"blank-row\" },\n                    [\n                      _vm._l(_vm.tableFields, function(field, fieldIndex) {\n                        return [\n                          field.visible\n                            ? _c(\"td\", { key: fieldIndex }, [_vm._v(\" \")])\n                            : _vm._e()\n                        ]\n                      })\n                    ],\n                    2\n                  )\n                })\n              : _vm._e()\n          ],\n          2\n        )\n      ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vuetable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vuetable.vue?vue&type=script&lang=js&\"","<template>\n    <div v-if=\"isFixedHeader\">\n        <div class=\"vuetable-head-wrapper\">\n            <table :class=\"['vuetable', css.tableClass, css.tableHeaderClass]\">\n                <thead>\n                <tr>\n                    <template v-for=\"(field, fieldIndex) in tableFields\">\n                        <template v-if=\"field.visible\">\n                            <template v-if=\"isSpecialField(field.name)\">\n                                <th v-if=\"extractName(field.name) == '__checkbox'\"\n                                    :key=\"fieldIndex\"\n                                    :style=\"{width: field.width}\"\n                                    :class=\"['vuetable-th-checkbox-'+trackBy, field.titleClass]\"\n                                >\n                                    <input type=\"checkbox\" @change=\"toggleAllCheckboxes(field.name, $event)\"\n                                           :checked=\"checkCheckboxesState(field.name)\">\n                                </th>\n                                <th v-if=\"extractName(field.name) == '__component'\"\n                                    :key=\"fieldIndex\"\n                                    :style=\"{width: field.width}\"\n                                    :class=\"['vuetable-th-component-'+trackBy, field.titleClass, sortClass(field), {'sortable': isSortable(field)}]\"\n                                    v-html=\"renderTitle(field)\"\n                                    @click=\"orderBy(field, $event)\"\n                                ></th>\n                                <th v-if=\"extractName(field.name) == '__slot'\"\n                                    :key=\"fieldIndex\"\n                                    :style=\"{width: field.width}\"\n                                    :class=\"['vuetable-th-slot-'+extractArgs(field.name), field.titleClass, sortClass(field), {'sortable': isSortable(field)}]\"\n                                    v-html=\"renderTitle(field)\"\n                                    @click=\"orderBy(field, $event)\"\n                                ></th>\n                                <th v-if=\"extractName(field.name) == '__sequence'\"\n                                    :key=\"fieldIndex\"\n                                    :style=\"{width: field.width}\"\n                                    :class=\"['vuetable-th-sequence', field.titleClass || '']\" v-html=\"renderTitle(field)\">\n                                </th>\n                                <th v-if=\"notIn(extractName(field.name), ['__sequence', '__checkbox', '__component', '__slot'])\"\n                                    :key=\"fieldIndex\"\n                                    :style=\"{width: field.width}\"\n                                    :class=\"['vuetable-th-'+field.name, field.titleClass || '']\" v-html=\"renderTitle(field)\">\n                                </th>\n                            </template>\n                            <template v-else>\n                                <th @click=\"orderBy(field, $event)\"\n                                    :key=\"fieldIndex\"\n                                    :id=\"'_' + field.name\"\n                                    :style=\"{width: field.width}\"\n                                    :class=\"['vuetable-th-'+field.name, field.titleClass, sortClass(field), {'sortable': isSortable(field)}]\"\n                                    v-html=\"renderTitle(field)\"\n                                ></th>\n                            </template>\n                        </template>\n                    </template>\n                    <th v-if=\"scrollVisible\" :style=\"{width: scrollBarWidth}\" class=\"vuetable-gutter-col\"></th>\n                </tr>\n                </thead>\n            </table>\n        </div>\n        <div class=\"vuetable-body-wrapper\" :style=\"{height: tableHeight}\">\n            <table :class=\"['vuetable', css.tableClass, css.tableBodyClass]\">\n                <colgroup>\n                    <template v-for=\"(field, fieldIndex) in tableFields\">\n                        <template v-if=\"field.visible\">\n                            <col\n                                    :key=\"fieldIndex\"\n                                    :id=\"'_col_' + field.name\"\n                                    :style=\"{width: field.width}\"\n                                    :class=\"['vuetable-th-'+field.name, field.titleClass]\"\n                            />\n                        </template>\n                    </template>\n                </colgroup>\n                <tbody v-cloak class=\"vuetable-body\">\n                <template v-for=\"(item, itemIndex) in tableData\">\n                    <tr\n                            :key=\"itemIndex\"\n                            :item-index=\"itemIndex\"\n                            :render=\"onRowChanged(item)\"\n                            :class=\"onRowClass(item, itemIndex)\"\n                            @click=\"onRowClicked(item, $event)\"\n                            @dblclick=\"onRowDoubleClicked(item, $event)\"\n                    >\n                        <template v-for=\"(field, fieldIndex) in tableFields\">\n                            <template v-if=\"field.visible\">\n                                <template v-if=\"isSpecialField(field.name)\">\n                                    <td v-if=\"extractName(field.name) == '__sequence'\"\n                                        :key=\"fieldIndex\"\n                                        :class=\"['vuetable-sequence', field.dataClass]\"\n                                        v-html=\"renderSequence(itemIndex)\">\n                                    </td>\n                                    <td v-if=\"extractName(field.name) == '__handle'\"\n                                        :key=\"fieldIndex\"\n                                        :class=\"['vuetable-handle', field.dataClass]\"\n                                        v-html=\"renderIconTag(['handle-icon', css.handleIcon])\"\n                                    ></td>\n                                    <td v-if=\"extractName(field.name) == '__checkbox'\"\n                                        :key=\"fieldIndex\"\n                                        :class=\"['vuetable-checkboxes', field.dataClass]\"\n                                    >\n                                        <input type=\"checkbox\"\n                                               @change=\"toggleCheckbox(item, field.name, $event)\"\n                                               :checked=\"rowSelected(item, field.name)\">\n                                    </td>\n                                    <td v-if=\"extractName(field.name) === '__component'\"\n                                        :key=\"fieldIndex\"\n                                        :class=\"['vuetable-component', field.dataClass]\"\n                                    >\n                                        <component :is=\"extractArgs(field.name)\"\n                                                   :row-data=\"item\" :row-index=\"itemIndex\" :row-field=\"field.sortField\"\n                                        ></component>\n                                    </td>\n                                    <td v-if=\"extractName(field.name) === '__slot'\"\n                                        :key=\"fieldIndex\"\n                                        :class=\"['vuetable-slot', field.dataClass]\"\n                                    >\n                                        <slot :name=\"extractArgs(field.name)\"\n                                              :row-data=\"item\" :row-index=\"itemIndex\" :row-field=\"field.sortField\"\n                                        ></slot>\n                                    </td>\n                                </template>\n                                <template v-else>\n                                    <td :class=\"field.dataClass\"\n                                        :key=\"fieldIndex\"\n                                        v-html=\"renderNormalField(field, item)\"\n                                        @click=\"onCellClicked(item, field, $event)\"\n                                        @dblclick=\"onCellDoubleClicked(item, field, $event)\"\n                                        @contextmenu=\"onCellRightClicked(item, field, $event)\"\n                                    ></td>\n                                </template>\n                            </template>\n                        </template>\n                    </tr>\n                    <template v-if=\"useDetailRow\">\n                        <transition :name=\"detailRowTransition\" :key=\"itemIndex\">\n                            <tr v-if=\"isVisibleDetailRow(item[trackBy])\"\n                                :class=\"[css.detailRowClass]\"\n                                @click=\"onDetailRowClick(item, $event)\"\n                            >\n                                <td :colspan=\"countVisibleFields\">\n                                    <component :is=\"detailRowComponent\" :row-data=\"item\" :row-index=\"itemIndex\"></component>\n                                </td>\n                            </tr>\n                        </transition>\n                    </template>\n                </template>\n                <template v-if=\"displayEmptyDataRow\">\n                    <tr>\n                        <td :colspan=\"countVisibleFields\" class=\"vuetable-empty-result\" v-html=\"noDataTemplate\"></td>\n                    </tr>\n                </template>\n                <template v-if=\"lessThanMinRows\">\n                    <tr v-for=\"i in blankRows\" class=\"blank-row\" :key=\"i\">\n                        <template v-for=\"(field, fieldIndex) in tableFields\">\n                            <td v-if=\"field.visible\" :key=\"fieldIndex\">&nbsp;</td>\n                        </template>\n                    </tr>\n                </template>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <table v-else :class=\"['vuetable', css.tableClass]\"> <!-- no fixed header - regular table -->\n        <thead>\n        <tr>\n            <template v-for=\"(field, fieldIndex) in tableFields\">\n                <template v-if=\"field.visible\">\n                    <template v-if=\"isSpecialField(field.name)\">\n                        <th v-if=\"extractName(field.name) == '__checkbox'\"\n                            :key=\"fieldIndex\"\n                            :style=\"{width: field.width}\"\n                            :class=\"['vuetable-th-checkbox-'+trackBy, field.titleClass]\"\n                        >\n                            <input type=\"checkbox\" @change=\"toggleAllCheckboxes(field.name, $event)\"\n                                   :checked=\"checkCheckboxesState(field.name)\">\n                        </th>\n                        <th v-if=\"extractName(field.name) == '__component'\"\n                            :key=\"fieldIndex\"\n                            :style=\"{width: field.width}\"\n                            :class=\"['vuetable-th-component-'+trackBy, field.titleClass, sortClass(field), {'sortable': isSortable(field)}]\"\n                            v-html=\"renderTitle(field)\"\n                            @click=\"orderBy(field, $event)\"\n                        ></th>\n                        <th v-if=\"extractName(field.name) == '__slot'\"\n                            :key=\"fieldIndex\"\n                            :style=\"{width: field.width}\"\n                            :class=\"['vuetable-th-slot-'+extractArgs(field.name), field.titleClass, sortClass(field), {'sortable': isSortable(field)}]\"\n                            v-html=\"renderTitle(field)\"\n                            @click=\"orderBy(field, $event)\"\n                        ></th>\n                        <th v-if=\"extractName(field.name) == '__sequence'\"\n                            :key=\"fieldIndex\"\n                            :style=\"{width: field.width}\"\n                            :class=\"['vuetable-th-sequence', field.titleClass || '', sortClass(field)]\" v-html=\"renderTitle(field)\"\n                        ></th>\n                        <th v-if=\"notIn(extractName(field.name), ['__sequence', '__checkbox', '__component', '__slot'])\"\n                            :key=\"fieldIndex\"\n                            :style=\"{width: field.width}\"\n                            :class=\"['vuetable-th-'+field.name, field.titleClass || '', sortClass(field)]\" v-html=\"renderTitle(field)\"\n                        ></th>\n                    </template>\n                    <template v-else>\n                        <th @click=\"orderBy(field, $event)\"\n                            :key=\"fieldIndex\"\n                            :id=\"'_' + field.name\"\n                            :style=\"{width: field.width}\"\n                            :class=\"['vuetable-th-'+field.name, field.titleClass, sortClass(field),  {'sortable': isSortable(field)}]\"\n                            v-html=\"renderTitle(field)\"\n                        ></th>\n                    </template>\n                </template>\n            </template>\n        </tr>\n        </thead>\n        <tbody v-cloak class=\"vuetable-body\">\n        <template v-for=\"(item, itemIndex) in tableData\">\n            <tr @dblclick=\"onRowDoubleClicked(item, $event)\"\n                :key=\"itemIndex\"\n                :item-index=\"itemIndex\"\n                :render=\"onRowChanged(item)\"\n                :class=\"onRowClass(item, itemIndex)\"\n                @click=\"onRowClicked(item, $event)\"\n            >\n                <template v-for=\"(field, fieldIndex) in tableFields\">\n                    <template v-if=\"field.visible\">\n                        <template v-if=\"isSpecialField(field.name)\">\n                            <td v-if=\"extractName(field.name) == '__sequence'\"\n                                :key=\"fieldIndex\"\n                                :class=\"['vuetable-sequence', field.dataClass]\"\n                                v-html=\"renderSequence(itemIndex)\"\n                            ></td>\n                            <td v-if=\"extractName(field.name) == '__handle'\"\n                                :key=\"fieldIndex\"\n                                :class=\"['vuetable-handle', field.dataClass]\"\n                                v-html=\"renderIconTag(['handle-icon', css.handleIcon])\"\n                            ></td>\n                            <td v-if=\"extractName(field.name) == '__checkbox'\"\n                                :key=\"fieldIndex\"\n                                :class=\"['vuetable-checkboxes', field.dataClass]\"\n                            >\n                                <input type=\"checkbox\"\n                                       @change=\"toggleCheckbox(item, field.name, $event)\"\n                                       :checked=\"rowSelected(item, field.name)\">\n                            </td>\n                            <td v-if=\"extractName(field.name) === '__component'\"\n                                :key=\"fieldIndex\"\n                                :class=\"['vuetable-component', field.dataClass]\"\n                            >\n                                <component :is=\"extractArgs(field.name)\"\n                                           :row-data=\"item\" :row-index=\"itemIndex\" :row-field=\"field.sortField\"\n                                ></component>\n                            </td>\n                            <td v-if=\"extractName(field.name) === '__slot'\"\n                                :key=\"fieldIndex\"\n                                :class=\"['vuetable-slot', field.dataClass]\"\n                            >\n                                <slot :name=\"extractArgs(field.name)\"\n                                      :row-data=\"item\" :row-index=\"itemIndex\" :row-field=\"field.sortField\"\n                                ></slot>\n                            </td>\n                        </template>\n                        <template v-else>\n                            <td v-if=\"hasCallback(field)\"\n                                :key=\"fieldIndex\"\n                                :class=\"field.dataClass\"\n                                v-html=\"callCallback(field, item)\"\n                                @click=\"onCellClicked(item, field, $event)\"\n                                @dblclick=\"onCellDoubleClicked(item, field, $event)\"\n                                @contextmenu=\"onCellRightClicked(item, field, $event)\"\n                            ></td>\n                            <td v-else\n                                :key=\"fieldIndex\"\n                                :class=\"field.dataClass\"\n                                v-html=\"getObjectValue(item, field.name, '')\"\n                                @click=\"onCellClicked(item, field, $event)\"\n                                @dblclick=\"onCellDoubleClicked(item, field, $event)\"\n                                @contextmenu=\"onCellRightClicked(item, field, $event)\"\n                            ></td>\n                        </template>\n                    </template>\n                </template>\n            </tr>\n            <template v-if=\"useDetailRow\">\n                <transition :name=\"detailRowTransition\" :key=\"itemIndex\">\n                    <tr v-if=\"isVisibleDetailRow(item[trackBy])\"\n                        :class=\"[css.detailRowClass]\"\n                        @click=\"onDetailRowClick(item, $event)\"\n                    >\n                        <td :colspan=\"countVisibleFields\">\n                            <component :is=\"detailRowComponent\" :row-data=\"item\" :row-index=\"itemIndex\"></component>\n                        </td>\n                    </tr>\n                </transition>\n            </template>\n        </template>\n        <template v-if=\"displayEmptyDataRow\">\n            <tr>\n                <td :colspan=\"countVisibleFields\" class=\"vuetable-empty-result\" v-html=\"noDataTemplate\"></td>\n            </tr>\n        </template>\n        <template v-if=\"lessThanMinRows\">\n            <tr v-for=\"i in blankRows\" class=\"blank-row\" :key=\"i\">\n                <template v-for=\"(field, fieldIndex) in tableFields\">\n                    <td v-if=\"field.visible\" :key=\"fieldIndex\">&nbsp;</td>\n                </template>\n            </tr>\n        </template>\n        </tbody>\n    </table>\n</template>\n\n<script>\n    import axios from 'axios'\n\n    export default {\n        props: {\n            fields: {\n                type: Array,\n                required: true\n            },\n            loadOnStart: {\n                type: Boolean,\n                default: true\n            },\n            apiUrl: {\n                type: String,\n                default: ''\n            },\n            httpMethod: {\n                type: String,\n                default: 'get',\n                validator: (value) => {\n                    return ['get', 'post'].indexOf(value) > -1\n                }\n            },\n            reactiveApiUrl: {\n                type: Boolean,\n                default: true\n            },\n            apiMode: {\n                type: Boolean,\n                default: true\n            },\n            data: {\n                type: [Array, Object],\n                default: null\n            },\n            dataTotal: {\n                type: Number,\n                default: 0\n            },\n            dataManager: {\n                type: Function,\n                default: null\n            },\n            dataPath: {\n                type: String,\n                default: 'data'\n            },\n            paginationPath: {\n                type: [String],\n                default: 'links.pagination'\n            },\n            queryParams: {\n                type: [Object, Function],\n                default () {\n                    return {\n                        sort: 'sort',\n                        page: 'page',\n                        perPage: 'per_page'\n                    }\n                }\n            },\n            appendParams: {\n                type: Object,\n                default () {\n                    return {}\n                }\n            },\n            httpOptions: {\n                type: Object,\n                default () {\n                    return {}\n                }\n            },\n            httpFetch: {\n                type: Function,\n                default: null\n            },\n            perPage: {\n                type: Number,\n                default: 10\n            },\n            initialPage: {\n                type: Number,\n                default: 1\n            },\n            sortOrder: {\n                type: Array,\n                default () {\n                    return []\n                }\n            },\n            multiSort: {\n                type: Boolean,\n                default () {\n                    return false\n                }\n            },\n            tableHeight: {\n                type: String,\n                default: null\n            },\n            /*\n             * physical key that will trigger multi-sort option\n             * possible values: 'alt', 'ctrl', 'meta', 'shift'\n             * 'ctrl' might not work as expected on Mac\n             */\n            multiSortKey: {\n                type: String,\n                default: 'alt'\n            },\n            /* deprecated */\n            rowClassCallback: {\n                type: [String, Function],\n                default: ''\n            },\n            rowClass: {\n                type: [String, Function],\n                default: ''\n            },\n            detailRowComponent: {\n                type: String,\n                default: ''\n            },\n            detailRowTransition: {\n                type: String,\n                default: ''\n            },\n            trackBy: {\n                type: String,\n                default: 'id'\n            },\n            css: {\n                type: Object,\n                default () {\n                    return {\n                        tableClass: 'ui blue selectable celled stackable attached table',\n                        loadingClass: 'loading',\n                        ascendingIcon: 'blue chevron up icon',\n                        descendingIcon: 'blue chevron down icon',\n                        ascendingClass: 'sorted-asc',\n                        descendingClass: 'sorted-desc',\n                        sortableIcon: '',\n                        detailRowClass: 'vuetable-detail-row',\n                        handleIcon: 'grey sidebar icon',\n                        tableBodyClass: 'vuetable-semantic-no-top vuetable-fixed-layout',\n                        tableHeaderClass: 'vuetable-fixed-layout'\n                    }\n                }\n            },\n            minRows: {\n                type: Number,\n                default: 0\n            },\n            silent: {\n                type: Boolean,\n                default: false\n            },\n            noDataTemplate: {\n                type: String,\n                default() {\n                    return 'No matching episodes'\n                }\n            },\n            showSortIcons: {\n                type: Boolean,\n                default: true\n            }\n        },\n        data () {\n            return {\n                eventPrefix: 'vuetable:',\n                tableFields: [],\n                tableData: null,\n                tablePagination: null,\n                currentPage: this.initialPage,\n                selectedTo: [],\n                visibleDetailRows: [],\n                lastScrollPosition: 0,\n                scrollBarWidth: '17px', //chrome default\n                scrollVisible: false,\n            }\n        },\n        mounted () {\n            this.normalizeFields()\n            this.normalizeSortOrder()\n            if (this.isFixedHeader) {\n                this.scrollBarWidth = this.getScrollBarWidth() + 'px';\n            }\n            this.$nextTick(function() {\n                this.fireEvent('initialized', this.tableFields)\n            })\n\n            if (this.loadOnStart) {\n                this.loadData()\n            }\n            if (this.isFixedHeader) {\n                let elem = this.$el.getElementsByClassName('vuetable-body-wrapper')[0];\n                if (elem != null) {\n                    elem.addEventListener('scroll', this.handleScroll);\n                }\n            }\n        },\n        destroyed () {\n            let elem = this.$el.getElementsByClassName('vuetable-body-wrapper')[0];\n            if (elem != null) {\n                elem.removeEventListener('scroll', this.handleScroll);\n            }\n        },\n        computed: {\n            version: () => VERSION,\n            useDetailRow () {\n                if (this.tableData && this.tableData[0] && this.detailRowComponent !== '' && typeof this.tableData[0][this.trackBy] === 'undefined') {\n                    this.warn('You need to define unique row identifier in order for detail-row feature to work. Use `track-by` prop to define one!')\n                    return false\n                }\n\n                return this.detailRowComponent !== ''\n            },\n            countVisibleFields () {\n                return this.tableFields.filter(function(field) {\n                    return field.visible\n                }).length\n            },\n            countTableData () {\n                if (this.tableData === null) {\n                    return 0\n                }\n                return this.tableData.length\n            },\n            displayEmptyDataRow () {\n                return this.countTableData === 0 && this.noDataTemplate.length > 0\n            },\n            lessThanMinRows () {\n                if (this.tableData === null || this.tableData.length === 0) {\n                    return true\n                }\n                return this.tableData.length < this.minRows\n            },\n            blankRows () {\n                if (this.tableData === null || this.tableData.length === 0) {\n                    return this.minRows\n                }\n                if (this.tableData.length >= this.minRows) {\n                    return 0\n                }\n\n                return this.minRows - this.tableData.length\n            },\n            isApiMode () {\n                return this.apiMode\n            },\n            isDataMode () {\n                return ! this.apiMode\n            },\n            isFixedHeader () {\n                return this.tableHeight != null\n            }\n        },\n        methods: {\n            getScrollBarWidth () {\n                const outer = document.createElement('div');\n                const inner = document.createElement('div');\n\n                outer.style.visibility = 'hidden';\n                outer.style.width = '100px';\n\n                inner.style.width = '100%';\n\n\n                outer.appendChild(inner);\n                document.body.appendChild(outer);\n\n\n                const widthWithoutScrollbar = outer.offsetWidth;\n\n                outer.style.overflow = 'scroll';\n\n                const widthWithScrollbar = inner.offsetWidth;\n\n\n                document.body.removeChild(outer);\n\n\n                return (widthWithoutScrollbar - widthWithScrollbar);\n            },\n            handleScroll (e) { //make sure that the header and the body are aligned when scrolling horizontally on a table that is wider than the viewport\n                let horizontal = e.currentTarget.scrollLeft;\n                if (horizontal != this.lastScrollPosition) { //don't modify header scroll if we are scrolling vertically\n                    let header = this.$el.getElementsByClassName('vuetable-head-wrapper')[0]\n                    if (header != null) {\n                        header.scrollLeft = horizontal;\n                    }\n                    this.lastScrollPosition = horizontal;\n                }\n\n            },\n            normalizeFields () {\n                if (typeof(this.fields) === 'undefined') {\n                    this.warn('You need to provide \"fields\" prop.')\n                    return\n                }\n\n                this.tableFields = []\n                let self = this\n                let obj\n                this.fields.forEach(function(field, i) {\n                    if (typeof (field) === 'string') {\n                        obj = {\n                            name: field,\n                            title: self.setTitle(field),\n                            titleClass: '',\n                            dataClass: '',\n                            callback: null,\n                            visible: true,\n                        }\n                    } else {\n                        obj = {\n                            name: field.name,\n                            width: field.width,\n                            title: (field.title === undefined) ? self.setTitle(field.name) : field.title,\n                            sortField: field.sortField,\n                            titleClass: (field.titleClass === undefined) ? '' : field.titleClass,\n                            dataClass: (field.dataClass === undefined) ? '' : field.dataClass,\n                            callback: (field.callback === undefined) ? '' : field.callback,\n                            visible: (field.visible === undefined) ? true : field.visible,\n                        }\n                    }\n                    self.tableFields.push(obj)\n                })\n            },\n            setData (data) {\n                if (data === null || typeof(data) === 'undefined') return\n\n                this.fireEvent('loading')\n\n                if (Array.isArray(data)) {\n                    this.tableData = data\n                    this.fireEvent('loaded')\n                    return\n                }\n\n                this.tableData = this.getObjectValue(data, this.dataPath, null)\n                this.tablePagination = this.getObjectValue(data, this.paginationPath, null)\n\n                this.$nextTick(function() {\n                    this.fixHeader()\n                    this.fireEvent('pagination-data', this.tablePagination)\n                    this.fireEvent('loaded')\n                })\n            },\n            setTitle (str) {\n                if (this.isSpecialField(str)) {\n                    return ''\n                }\n\n                return this.titleCase(str)\n            },\n            getTitle (field) {\n                if (typeof(field.title) === 'function') return field.title()\n\n                return typeof(field.title) === 'undefined'\n                    ? field.name.replace('.', ' ')\n                    : field.title\n            },\n            renderTitle (field) {\n                let title = this.getTitle(field)\n\n                if (title.length > 0 && this.isInCurrentSortGroup(field) || this.hasSortableIcon(field)) {\n                    let style = `opacity:${this.sortIconOpacity(field)};position:relative;float:right`\n                    let iconTag = this.showSortIcons ? this.renderIconTag(['sort-icon', this.sortIcon(field)], `style=\"${style}\"`) : ''\n                    return title + ' ' + iconTag\n                }\n\n                return title\n            },\n            renderSequence (index) {\n                return this.tablePagination\n                    ? this.tablePagination.from + index\n                    : index\n            },\n            renderNormalField (field, item) {\n                return this.hasCallback(field)\n                    ? this.callCallback(field, item)\n                    : this.getObjectValue(item, field.name, '')\n            },\n            isSpecialField (fieldName) {\n                return fieldName.slice(0, 2) === '__'\n            },\n            titleCase (str) {\n                return str.replace(/\\w+/g, function(txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                })\n            },\n            camelCase (str, delimiter = '_') {\n                let self = this\n                return str.split(delimiter).map(function(item) {\n                    return self.titleCase(item)\n                }).join('')\n            },\n            notIn (str, arr) {\n                return arr.indexOf(str) === -1\n            },\n            loadData (success = this.loadSuccess, failed = this.loadFailed) {\n                if (this.isDataMode) {\n                    this.callDataManager()\n                    return\n                }\n\n                this.fireEvent('loading')\n\n                this.httpOptions['params'] = this.getAppendParams( this.getAllQueryParams() )\n\n                return this.fetch(this.apiUrl, this.httpOptions).then(\n                    success,\n                    failed\n                ).catch(() => failed())\n            },\n            fetch (apiUrl, httpOptions) {\n                return this.httpFetch\n                    ? this.httpFetch(apiUrl, httpOptions)\n                    : axios[this.httpMethod](apiUrl, httpOptions)\n            },\n            loadSuccess (response) {\n                this.fireEvent('load-success', response)\n\n                let body = this.transform(response.data)\n\n                this.tableData = this.getObjectValue(body, this.dataPath, null)\n                this.tablePagination = this.getObjectValue(body, this.paginationPath, null)\n\n                if (this.tablePagination === null) {\n                    this.warn('vuetable: pagination-path \"' + this.paginationPath + '\" not found. '\n                        + 'It looks like the data returned from the sever does not have pagination information '\n                        + \"or you may have set it incorrectly.\\n\"\n                        + 'You can explicitly suppress this warning by setting pagination-path=\"\".'\n                    )\n                }\n\n                this.$nextTick(function() {\n                    this.fixHeader()\n                    this.fireEvent('pagination-data', this.tablePagination)\n                    this.fireEvent('loaded')\n                })\n            },\n            fixHeader() {\n                if (!this.isFixedHeader) {\n                    return;\n                }\n\n                let elem = this.$el.getElementsByClassName('vuetable-body-wrapper')[0]\n                if (elem != null) {\n                    if (elem.scrollHeight > elem.clientHeight) {\n                        this.scrollVisible = true;\n                    }\n                    else {\n                        this.scrollVisible = false;\n                    }\n                }\n            },\n            loadFailed (response) {\n                console.error('load-error', response)\n                this.fireEvent('load-error', response)\n                this.fireEvent('loaded')\n            },\n            transform (data) {\n                let func = 'transform'\n\n                if (this.parentFunctionExists(func)) {\n                    return this.$parent[func].call(this.$parent, data)\n                }\n\n                return data\n            },\n            parentFunctionExists (func) {\n                return (func !== '' && typeof this.$parent[func] === 'function')\n            },\n            callParentFunction (func, args, defaultValue = null) {\n                if (this.parentFunctionExists(func)) {\n                    return this.$parent[func].call(this.$parent, args)\n                }\n\n                return defaultValue\n            },\n            fireEvent (eventName, args) {\n                this.$emit(this.eventPrefix + eventName, args)\n            },\n            warn (msg) {\n                if (!this.silent) {\n                    console.warn(msg)\n                }\n            },\n            getAllQueryParams () {\n                let params = {}\n\n                if (typeof(this.queryParams) === 'function') {\n                    params = this.queryParams(this.sortOrder, this.currentPage, this.perPage)\n                    return typeof(params) !== 'object' ? {} : params\n                }\n\n                params[this.queryParams.sort] = this.getSortParam()\n                params[this.queryParams.page] = this.currentPage\n                params[this.queryParams.perPage] = this.perPage\n\n                return params\n            },\n            getSortParam () {\n                if (!this.sortOrder || this.sortOrder.field == '') {\n                    return ''\n                }\n\n                if (typeof this.$parent['getSortParam'] === 'function') {\n                    return this.$parent['getSortParam'].call(this.$parent, this.sortOrder)\n                }\n\n                return this.getDefaultSortParam()\n            },\n            getDefaultSortParam () {\n                let result = '';\n\n                for (let i = 0; i < this.sortOrder.length; i++) {\n                    let fieldName = (typeof this.sortOrder[i].sortField === 'undefined')\n                        ? this.sortOrder[i].field\n                        : this.sortOrder[i].sortField;\n\n                    result += fieldName + '|' + this.sortOrder[i].direction + ((i+1) < this.sortOrder.length ? ',' : '');\n                }\n                return result;\n            },\n            getAppendParams (params) {\n                for (let x in this.appendParams) {\n                    params[x] = this.appendParams[x]\n                }\n\n                return params\n            },\n            extractName (string) {\n                return string.split(':')[0].trim()\n            },\n            extractArgs (string) {\n                return string.split(':')[1]\n            },\n            isSortable (field) {\n                return !(typeof field.sortField === 'undefined')\n            },\n            isInCurrentSortGroup (field) {\n                return this.currentSortOrderPosition(field) !== false;\n            },\n            hasSortableIcon (field) {\n                return this.isSortable(field) && this.css.sortableIcon != ''\n            },\n            currentSortOrderPosition (field) {\n                if ( ! this.isSortable(field)) {\n                    return false\n                }\n\n                for (let i = 0; i < this.sortOrder.length; i++) {\n                    if (this.fieldIsInSortOrderPosition(field, i)) {\n                        return i;\n                    }\n                }\n\n                return false;\n            },\n            fieldIsInSortOrderPosition (field, i) {\n                return this.sortOrder[i].field === field.name && this.sortOrder[i].sortField === field.sortField\n            },\n            orderBy (field, event) {\n                if ( ! this.isSortable(field) ) return\n\n                let key = this.multiSortKey.toLowerCase() + 'Key'\n\n                if (this.multiSort && event[key]) { //adding column to multisort\n                    this.multiColumnSort(field)\n                } else {\n                    //no multisort, or resetting sort\n                    this.singleColumnSort(field)\n                }\n\n                this.currentPage = 1    // reset page index\n                if (this.apiMode || this.dataManager) {\n                    this.loadData()\n                }\n            },\n            multiColumnSort (field) {\n                let i = this.currentSortOrderPosition(field);\n\n                if(i === false) { //this field is not in the sort array yet\n                    this.sortOrder.push({\n                        field: field.name,\n                        sortField: field.sortField,\n                        direction: 'asc'\n                    });\n                } else { //this field is in the sort array, now we change its state\n                    if(this.sortOrder[i].direction === 'asc') {\n                        // switch direction\n                        this.sortOrder[i].direction = 'desc'\n                    } else {\n                        //remove sort condition\n                        this.sortOrder.splice(i, 1);\n                    }\n                }\n            },\n            singleColumnSort (field) {\n                if (this.sortOrder.length === 0) {\n                    this.clearSortOrder()\n                }\n\n                this.sortOrder.splice(1); //removes additional columns\n\n                if (this.fieldIsInSortOrderPosition(field, 0)) {\n                    // change sort direction\n                    this.sortOrder[0].direction = this.sortOrder[0].direction === 'asc' ? 'desc' : 'asc'\n                } else {\n                    // reset sort direction\n                    this.sortOrder[0].direction = 'asc'\n                }\n                this.sortOrder[0].field = field.name\n                this.sortOrder[0].sortField = field.sortField\n            },\n            clearSortOrder () {\n                this.sortOrder.push({\n                    field: '',\n                    sortField: '',\n                    direction: 'asc'\n                });\n            },\n            sortClass (field) {\n                let cls = ''\n                let i = this.currentSortOrderPosition(field)\n\n                if (i !== false) {\n                    cls = (this.sortOrder[i].direction == 'asc') ? this.css.ascendingClass : this.css.descendingClass\n                }\n\n                return cls\n            },\n            sortIcon (field) {\n                let cls = this.css.sortableIcon\n                let i = this.currentSortOrderPosition(field)\n\n                if (i !== false) {\n                    cls = (this.sortOrder[i].direction == 'asc') ? this.css.ascendingIcon : this.css.descendingIcon\n                }\n\n                return cls;\n            },\n            sortIconOpacity (field) {\n                /*\n                 * fields with stronger precedence have darker color\n                 *\n                 * if there are few fields, we go down by 0.3\n                 * ex. 2 fields are selected: 1.0, 0.7\n                 *\n                 * if there are more we go down evenly on the given spectrum\n                 * ex. 6 fields are selected: 1.0, 0.86, 0.72, 0.58, 0.44, 0.3\n                 */\n                let max = 1.0,\n                    min = 0.3,\n                    step = 0.3\n\n                let count = this.sortOrder.length;\n                let current = this.currentSortOrderPosition(field)\n\n\n                if(max - count * step < min) {\n                    step = (max - min) / (count-1)\n                }\n\n                let opacity = max - current * step\n\n                return opacity\n            },\n            hasCallback (item) {\n                return item.callback ? true : false\n            },\n            callCallback (field, item) {\n                if ( ! this.hasCallback(field)) return\n\n                if(typeof(field.callback) == 'function') {\n                    return field.callback(this.getObjectValue(item, field.name))\n                }\n\n                let args = field.callback.split('|')\n                let func = args.shift()\n\n                if (typeof this.$parent[func] === 'function') {\n                    let value = this.getObjectValue(item, field.name)\n\n                    return (args.length > 0)\n                        ? this.$parent[func].apply(this.$parent, [value].concat(args))\n                        : this.$parent[func].call(this.$parent, value)\n                }\n\n                return null\n            },\n            getObjectValue (object, path, defaultValue) {\n                defaultValue = (typeof defaultValue === 'undefined') ? null : defaultValue\n\n                let obj = object\n                if (path.trim() != '') {\n                    let keys = path.split('.')\n                    keys.forEach(function(key) {\n                        if (obj !== null && typeof obj[key] !== 'undefined' && obj[key] !== null) {\n                            obj = obj[key]\n                        } else {\n                            obj = defaultValue\n                            return\n                        }\n                    })\n                }\n                return obj\n            },\n            toggleCheckbox (dataItem, fieldName, event) {\n                let isChecked = event.target.checked\n                let idColumn = this.trackBy\n\n                if (dataItem[idColumn] === undefined) {\n                    this.warn('__checkbox field: The \"'+this.trackBy+'\" field does not exist! Make sure the field you specify in \"track-by\" prop does exist.')\n                    return\n                }\n\n                let key = dataItem[idColumn]\n                if (isChecked) {\n                    this.selectId(key)\n                } else {\n                    this.unselectId(key)\n                }\n                this.$emit('vuetable:checkbox-toggled', isChecked, dataItem)\n            },\n            selectId (key) {\n                if ( ! this.isSelectedRow(key)) {\n                    this.selectedTo.push(key)\n                }\n            },\n            unselectId (key) {\n                this.selectedTo = this.selectedTo.filter(function(item) {\n                    return item !== key\n                })\n            },\n            isSelectedRow (key) {\n                return this.selectedTo.indexOf(key) >= 0\n            },\n            rowSelected (dataItem, fieldName){\n                let idColumn = this.trackBy\n                let key = dataItem[idColumn]\n\n                return this.isSelectedRow(key)\n            },\n            checkCheckboxesState (fieldName) {\n                if (! this.tableData) return\n\n                let self = this\n                let idColumn = this.trackBy\n                let selector = 'th.vuetable-th-checkbox-' + idColumn + ' input[type=checkbox]'\n                let els = document.querySelectorAll(selector)\n\n                //fixed:document.querySelectorAll return the typeof nodeList not array\n                if (els.forEach===undefined)\n                    els.forEach=function(cb){\n                        [].forEach.call(els, cb);\n                    }\n\n                // count how many checkbox row in the current page has been checked\n                let selected = this.tableData.filter(function(item) {\n                    return self.selectedTo.indexOf(item[idColumn]) >= 0\n                })\n\n                // count == 0, clear the checkbox\n                if (selected.length <= 0) {\n                    els.forEach(function(el) {\n                        el.indeterminate = false\n                    })\n                    return false\n                }\n                // count > 0 and count < perPage, set checkbox state to 'indeterminate'\n                else if (selected.length < this.perPage) {\n                    els.forEach(function(el) {\n                        el.indeterminate = true\n                    })\n                    return true\n                }\n                // count == perPage, set checkbox state to 'checked'\n                else {\n                    els.forEach(function(el) {\n                        el.indeterminate = false\n                    })\n                    return true\n                }\n            },\n            toggleAllCheckboxes (fieldName, event) {\n                let self = this\n                let isChecked = event.target.checked\n                let idColumn = this.trackBy\n\n                if (isChecked) {\n                    this.tableData.forEach(function(dataItem) {\n                        self.selectId(dataItem[idColumn])\n                    })\n                } else {\n                    this.tableData.forEach(function(dataItem) {\n                        self.unselectId(dataItem[idColumn])\n                    })\n                }\n                this.$emit('vuetable:checkbox-toggled-all', isChecked)\n            },\n            gotoPreviousPage () {\n                if (this.currentPage > 1) {\n                    this.currentPage--\n                    this.loadData()\n                }\n            },\n            gotoNextPage () {\n                if (this.currentPage < this.tablePagination.last_page) {\n                    this.currentPage++\n                    this.loadData()\n                }\n            },\n            gotoPage (page) {\n                if (page != this.currentPage && (page > 0 && page <= this.tablePagination.last_page)) {\n                    this.currentPage = page\n                    this.loadData()\n                }\n            },\n            isVisibleDetailRow (rowId) {\n                return this.visibleDetailRows.indexOf( rowId ) >= 0\n            },\n            showDetailRow (rowId) {\n                if (!this.isVisibleDetailRow(rowId)) {\n                    this.visibleDetailRows.push(rowId)\n                }\n            },\n            hideDetailRow (rowId) {\n                if (this.isVisibleDetailRow(rowId)) {\n                    this.visibleDetailRows.splice(\n                        this.visibleDetailRows.indexOf(rowId),\n                        1\n                    )\n                }\n            },\n            toggleDetailRow (rowId) {\n                if (this.isVisibleDetailRow(rowId)) {\n                    this.hideDetailRow(rowId)\n                } else {\n                    this.showDetailRow(rowId)\n                }\n            },\n            showField (index) {\n                if (index < 0 || index > this.tableFields.length) return\n\n                this.tableFields[index].visible = true\n            },\n            hideField (index) {\n                if (index < 0 || index > this.tableFields.length) return\n\n                this.tableFields[index].visible = false\n            },\n            toggleField (index) {\n                if (index < 0 || index > this.tableFields.length) return\n\n                this.tableFields[index].visible = ! this.tableFields[index].visible\n            },\n            renderIconTag (classes, options = '') {\n                return typeof(this.css.renderIcon) === 'undefined'\n                    ? `<i class=\"${classes.join(' ')}\" ${options}></i>`\n                    : this.css.renderIcon(classes, options)\n            },\n            makePagination (total = null, perPage = null, currentPage = null) {\n                let pagination = {}\n                total = total === null ? this.dataTotal : total\n                perPage = perPage === null ? this.perPage : perPage\n                currentPage = currentPage === null ? this.currentPage : currentPage\n\n                return {\n                    'total': total,\n                    'per_page': perPage,\n                    'current_page': currentPage,\n                    'last_page': Math.ceil(total / perPage) || 0,\n                    'next_page_url': '',\n                    'prev_page_url': '',\n                    'from': (currentPage -1) * perPage +1,\n                    'to': Math.min(currentPage * perPage, total)\n                }\n            },\n            normalizeSortOrder () {\n                this.sortOrder.forEach(function(item) {\n                    item.sortField = item.sortField || item.field\n                })\n            },\n            callDataManager () {\n                if (this.dataManager === null && this.data === null) return\n\n                if (Array.isArray(this.data)) {\n                    return this.setData(this.data)\n                }\n\n                this.normalizeSortOrder()\n\n                return this.setData(\n                    this.dataManager\n                        ? this.dataManager(this.sortOrder, this.makePagination())\n                        : this.data\n                )\n            },\n            onRowClass (dataItem, index) {\n                if (this.rowClassCallback !== '') {\n                    this.warn('\"row-class-callback\" prop is deprecated, please use \"row-class\" prop instead.')\n                    return\n                }\n\n                if (typeof(this.rowClass) === 'function') {\n                    return this.rowClass(dataItem, index)\n                }\n\n                return this.rowClass\n            },\n            onRowChanged (dataItem) {\n                this.fireEvent('row-changed', dataItem)\n                return true\n            },\n            onRowClicked (dataItem, event) {\n                this.$emit(this.eventPrefix + 'row-clicked', dataItem, event)\n                return true\n            },\n            onRowDoubleClicked (dataItem, event) {\n                this.$emit(this.eventPrefix + 'row-dblclicked', dataItem, event)\n            },\n            onDetailRowClick (dataItem, event) {\n                this.$emit(this.eventPrefix + 'detail-row-clicked', dataItem, event)\n            },\n            onCellClicked (dataItem, field, event) {\n                this.$emit(this.eventPrefix + 'cell-clicked', dataItem, field, event)\n            },\n            onCellDoubleClicked (dataItem, field, event) {\n                this.$emit(this.eventPrefix + 'cell-dblclicked', dataItem, field, event)\n            },\n            onCellRightClicked (dataItem, field, event) {\n                this.$emit(this.eventPrefix + 'cell-rightclicked', dataItem, field, event)\n            },\n            /*\n             * API for externals\n             */\n            changePage (page) {\n                if (page === 'prev') {\n                    this.gotoPreviousPage()\n                } else if (page === 'next') {\n                    this.gotoNextPage()\n                } else {\n                    this.gotoPage(page)\n                }\n            },\n            reload () {\n                return this.loadData()\n            },\n            refresh () {\n                this.currentPage = 1\n                return this.loadData()\n            },\n            resetData () {\n                this.tableData = null\n                this.tablePagination = null\n                this.fireEvent('data-reset')\n            }\n        }, // end: methods\n        watch: {\n            'multiSort' (newVal, oldVal) {\n                if (newVal === false && this.sortOrder.length > 1) {\n                    this.sortOrder.splice(1);\n                    this.loadData();\n                }\n            },\n            'apiUrl'  (newVal, oldVal) {\n                if(this.reactiveApiUrl && newVal !== oldVal)\n                    this.refresh()\n            },\n            'data' (newVal, oldVal) {\n                this.setData(newVal)\n            },\n            'tableHeight' (newVal, oldVal) {\n                this.fixHeader()\n            }\n        },\n    }\n</script>\n\n<style scoped>\n    [v-cloak] {\n        display: none;\n    }\n    .vuetable th.sortable:hover {\n        color: #2185d0;\n        cursor: pointer;\n    }\n    .vuetable-body-wrapper {\n        position:relative;\n        overflow-y:auto;\n    }\n    .vuetable-head-wrapper {\n        overflow-x: hidden;\n    }\n    .vuetable-actions {\n        width: 15%;\n        padding: 12px 0px;\n        text-align: center;\n    }\n    .vuetable-pagination {\n        background: #f9fafb !important;\n    }\n    .vuetable-pagination-info {\n        margin-top: auto;\n        margin-bottom: auto;\n    }\n    .vuetable-empty-result {\n        text-align: center;\n    }\n    .vuetable-clip-text {\n        white-space: pre-wrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        display: block;\n    }\n    .vuetable-semantic-no-top {\n        border-top:none !important;\n        margin-top:0 !important;\n    }\n    .vuetable-fixed-layout {\n        table-layout: fixed;\n    }\n    .vuetable-gutter-col {\n        padding: 0 !important;\n        border-left: none  !important;\n        border-right: none  !important;\n    }\n</style>\n","import { render, staticRenderFns } from \"./Vuetable.vue?vue&type=template&id=ec786f2c&scoped=true&\"\nimport script from \"./Vuetable.vue?vue&type=script&lang=js&\"\nexport * from \"./Vuetable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Vuetable.vue?vue&type=style&index=0&id=ec786f2c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ec786f2c\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/vagrant/sites/devmode/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('ec786f2c', component.options)\n    } else {\n      api.reload('ec786f2c', component.options)\n    }\n    module.hot.accept(\"./Vuetable.vue?vue&type=template&id=ec786f2c&scoped=true&\", function () {\n      api.rerender('ec786f2c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/vue/Vuetable.vue\"\nexport default component.exports"],"sourceRoot":""}