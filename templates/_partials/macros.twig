{#
 # Fetch the mentions from the webmention.io API and output them
 # c.f.: https://github.com/aaronpk/webmention.io
 # @param     []  params
 # @param string  label
 #}
{% macro webmentions(label, params) %}
    {% set webmentionApiUrl = "https://webmention.io/api/mentions.jf2" %}
    {% set webmentionApiToken = "yZ0xAVxFigzp1RiwI1-Uow" %}
    {% set webmentionQueryParams = {
        "token": webmentionApiToken,
        "per-page": 10000,
    } | merge(params) %}
    {% set webmentionQuery = url(webmentionApiUrl, webmentionQueryParams) %}
    {% set webmentionQuery = webmentionQuery | replace('/%5B[0-9]+%5D/', '[]') %}
    {%- set webmentionResponse = craft.app.api.client.get(webmentionQuery).getBody().__toString() | json_decode -%}
    {% if webmentionResponse and webmentionResponse.children and webmentionResponse.children is iterable %}
        <div class="webmentions__facepile">
            <h3 class="font-mono italic text-devmode-pink font-bold text-3xl inline-block">{{ webmentionResponse.children | length  }} {{ label }}</h3>
            {% for webmention in webmentionResponse.children %}
                <a class="" href="{{ webmention.url }}" target="_blank" rel="noopener noreferrer">
                    <img src="{{ craft.imageOptimize.placeholderBox(48, 48) }}"
                         data-src="{{ webmention.author.photo }}"
                         alt="{{ webmention.author.name }}"
                         class="webmentions__face lazyload"
                    />
                </a>
            {% endfor %}
        </div>
    {% endif %}
{% endmacro %}

{# Display lines of code#}
{% macro displayCodeLines(lineStartNum, lineEndNum, codeLines) %}
    <div class="absolute left-0">
        <div class="inline-block pl-2">
            <p class="font-mono text-left whitespace-no-wrap">
                {% for i in lineStartNum..lineEndNum %}
                    <span class="text-gray-600 pr-2 border-r-2 border-gray-600 border-solid">{% if i < 10 %}&nbsp;{% endif %}{{ i }}</span>
                    {% set line = "line" ~ i %}
                    {% if codeLines[line] is defined and codeLines[line] |length %}
                        {{ codeLines[line] }}
                    {% endif %}
                    <br />
                {% endfor %}
            </p>
        </div>
    </div>
{% endmacro displayCodeLines %}

{# Add a Person array from `users` to the `property` of `jsonLd` #}
{% macro addPersonArray(jsonLd, property, users) %}
    {% set usersArray = [] %}
    {% for user in users %}
        {% set usersArray = usersArray | merge([seomatic.jsonLd.create({
            'type': 'Person',
            'affiliation': user.profileCompany,
            'description': user.profileBio,
            'jobTitle': user.profileTitle,
            'familyName': user.lastName,
            'givenName': user.firstName,
            'name': user.fullName,
            'sameAs': [
                user.profileTwitterUrl,
                user.profileGithubUrl,
            ],
            'url': user.profileUrl,
        }, false)]) %}
    {% endfor %}
    {% do jsonLd.setAttributes({
        (property): usersArray
    }) %}
{% endmacro addPersonArray %}

{# Add a Thing array from `mentions` to the `property` of `jsonLd` #}
{% macro addMentionsArray(jsonLd, property, mentions) %}
    {% set mentionsArray = [] %}
    {% for mention in mentions %}
        {% set mentionsArray = mentionsArray | merge([seomatic.jsonLd.create({
            'type': 'Thing',
            'name': mention.linkName,
            'url': mention.linkUrl,
        }, false)]) %}
    {% endfor %}
    {% do jsonLd.setAttributes({
        (property): mentionsArray
    }) %}
{% endmacro addMentionsArray %}
